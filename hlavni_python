import sys
import requests
from PyQt5.QtWidgets import QApplication, QMainWindow, QPushButton, QLabel

class RadioApp(QMainWindow):
    def __init__(self):
        super().__init__()

        # Nastavení titulku okna a jeho velikosti
        self.setWindowTitle("Online Radio")
        self.setGeometry(100, 100, 400, 300)

        # Tlačítko pro přepnutí na předchozí stanici
        self.prev_button = QPushButton("Prev", self)
        self.prev_button.move(10, 10)
        self.prev_button.clicked.connect(self.on_prev_clicked)

        # Tlačítko pro přepnutí na následující stanici
        self.next_button = QPushButton("Next", self)
        self.next_button.move(70, 10)
        self.next_button.clicked.connect(self.on_next_clicked)

        # Tlačítko pro ovládání hlasitosti nahoru
        self.volume_up_button = QPushButton("Volume Up", self)
        self.volume_up_button.move(10, 50)
        self.volume_up_button.clicked.connect(self.on_volume_up_clicked)

        # Tlačítko pro ovládání hlasitosti dolů
        self.volume_down_button = QPushButton("Volume Down", self)
        self.volume_down_button.move(10, 90)
        self.volume_down_button.clicked.connect(self.on_volume_down_clicked)

        # Zobrazení informací o aktuálně přehrávané skladbě
        self.song_info_label = QLabel("", self)
        self.song_info_label.move(10, 130)

    def on_prev_clicked(self):
        # Zde by měla být implementace pro přepnutí na předchozí stanici
            # Načtení seznamu dostupných stanic
         stations = self.load_stations()

        # Vyhledání indexu aktuálně přehrávané stanice
        current_index = self.find_current_station_index(stations)

        # Pokud je aktuální stanice první v seznamu, přepněte na poslední
        if current_index == 0:
            next_index = len(stations) - 1
        else:
            next_index = current_index - 1

        # Přepnutí na předchozí stanici
        self.play_station(stations[next_index])
        pass

    def on_next_clicked(self):
        # Zde by měla být implementace pro přepnutí na následující stanici
        def on_next_clicked(self):
        # Načtení seznamu dostupných stanic
        stations = self.load_stations()

        # Vyhledání indexu aktuálně přehrávané stanice
        current_index = self.find_current_station_index(stations)

        # Pokud je aktuální stanice poslední v seznamu, přepněte na první
        if current_index == len(stations) - 1:
            next_index = 0
        else:
            next_index = current_index + 1

        # Přepnutí na následující stanici
        self.play_station(stations[next_index])
        pass

    def on_volume_up_clicked(self):
        # Zde by měla být implementace pro zvýšení hlasitosti
        pass

    def on_volume_down_clicked(self):
        # Zde by měla být implementace pro snížení hlasitosti
        pass

    def load_stations(self):
        # Adresa online databáze stanic
        database_url = "https://example.com/stations"

        # Načtení seznamu stanic ze serveru
        response = requests.get(database_url)
        data = response.json()

        # Vytvoření seznamu objektů reprezentujících jednotlivé stanice
        stations = []
        for station in data:
            stations.append(Station(station['name'], station['url']))

        return stations
        
    def find_current_station_index(self, stations):
        # Získání adresy streamu aktuálně přehrávané stanice
        current_stream_url = self.player.current_stream_url()

        # Vyhledání indexu aktuálně přehrávané stanice v seznamu stanic
        for i, station in enumerate(stations):
            if station.stream_url == current_stream_url:
                return i

        # Pokud aktuálně přehrávaná stanice nebyla nalezena, vraťte -1
        return -1

    def play_station(self, station):
        # Přehrání streamu ze zadané stanice
        self.player.play_stream(station.stream_url)

        # Zobrazení informací o aktuálně přehrávané skladbě
        self.display_song_info(station.name)

    def display_song_info(self, station_name):
        # Získání metadata o aktuálně přehrávané skladbě
        song_info = self.get_song_info()

        # Formátování informací o skladbě do textového řetězce
        text = f"{station_name}: {song_info.title} - {song_info.artist}"

        # Zobrazení informací o skladbě v aplikaci
        self.song_info_label.setText(text)

    def get_song_info(self):
        # Získání adresy streamu aktuálně přehrávané stanice
        stream_url = self.player.current_stream_url()

        # Stáhnutí a načtení metadata ze streamu
        audio = MP3(urlopen(stream_url))

        # Vytvoření objektu pro uložení metadata
        song_info = SongInfo()

        # Naplnění objektu metadata
        song_info.title = audio.get("TIT2", "Unknown title").text[0]
        song_info.artist = audio.get("TPE1", "Unknown artist").text[0]

        return song_info


if __name__ == "__main__":
    # Vytvoření instance aplikace a hlavního okna
    app = QApplication(sys.argv)
    window = RadioApp()
    window.show()

    # Spuštění aplikace
    sys.exit(app.exec_())
